// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels(in *jlexer.Lexer, out *UserResList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(UserResList, 0, 0)
			} else {
				*out = UserResList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 UserRes
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels(out *jwriter.Writer, in UserResList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v UserResList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserResList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserResList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserResList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels1(in *jlexer.Lexer, out *UserRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "role":
			out.Role = string(in.String())
		case "first_name":
			out.FirstName = string(in.String())
		case "second_name":
			out.SecondName = string(in.String())
		case "last_name":
			out.LastName = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "email_verified":
			out.EmailVerified = bool(in.Bool())
		case "phone":
			out.Phone = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels1(out *jwriter.Writer, in UserRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix)
		out.String(string(in.Role))
	}
	{
		const prefix string = ",\"first_name\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"second_name\":"
		out.RawString(prefix)
		out.String(string(in.SecondName))
	}
	{
		const prefix string = ",\"last_name\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"email_verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.EmailVerified))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.String(string(in.Phone))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels1(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels2(in *jlexer.Lexer, out *User) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "role":
			out.Role = Role(in.Int8())
		case "first_name":
			out.FirstName = string(in.String())
		case "second_name":
			out.SecondName = string(in.String())
		case "last_name":
			out.LastName = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "email_verified":
			out.EmailVerified = bool(in.Bool())
		case "password":
			out.Password = string(in.String())
		case "phone":
			out.Phone = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels2(out *jwriter.Writer, in User) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix)
		out.Int8(int8(in.Role))
	}
	{
		const prefix string = ",\"first_name\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"second_name\":"
		out.RawString(prefix)
		out.String(string(in.SecondName))
	}
	{
		const prefix string = ",\"last_name\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"email_verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.EmailVerified))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.String(string(in.Phone))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v User) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v User) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *User) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *User) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels2(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels3(in *jlexer.Lexer, out *ParentRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pasport":
			out.Passport = string(in.String())
		case "passport_verified":
			out.PassportVerified = bool(in.Bool())
		case "dir_path":
			out.DirPath = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels3(out *jwriter.Writer, in ParentRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pasport\":"
		out.RawString(prefix[1:])
		out.String(string(in.Passport))
	}
	{
		const prefix string = ",\"passport_verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.PassportVerified))
	}
	{
		const prefix string = ",\"dir_path\":"
		out.RawString(prefix)
		out.String(string(in.DirPath))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ParentRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ParentRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ParentRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ParentRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels3(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels4(in *jlexer.Lexer, out *Parent) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "user_id":
			out.UserID = uint64(in.Uint64())
		case "role":
			out.Role = Role(in.Int8())
		case "first_name":
			out.FirstName = string(in.String())
		case "second_name":
			out.SecondName = string(in.String())
		case "last_name":
			out.LastName = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "email_verified":
			out.EmailVerified = bool(in.Bool())
		case "password":
			out.Password = string(in.String())
		case "phone":
			out.Phone = string(in.String())
		case "passport":
			out.Passport = string(in.String())
		case "passport_verified":
			out.PassportVerified = bool(in.Bool())
		case "dir_path":
			out.DirPath = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels4(out *jwriter.Writer, in Parent) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.UserID))
	}
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix)
		out.Int8(int8(in.Role))
	}
	{
		const prefix string = ",\"first_name\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"second_name\":"
		out.RawString(prefix)
		out.String(string(in.SecondName))
	}
	{
		const prefix string = ",\"last_name\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"email_verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.EmailVerified))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.String(string(in.Phone))
	}
	{
		const prefix string = ",\"passport\":"
		out.RawString(prefix)
		out.String(string(in.Passport))
	}
	{
		const prefix string = ",\"passport_verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.PassportVerified))
	}
	{
		const prefix string = ",\"dir_path\":"
		out.RawString(prefix)
		out.String(string(in.DirPath))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Parent) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Parent) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Parent) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Parent) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels4(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels5(in *jlexer.Lexer, out *Credentials) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels5(out *jwriter.Writer, in Credentials) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Credentials) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Credentials) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Credentials) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Credentials) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels5(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels6(in *jlexer.Lexer, out *ChildWithRegReqList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ChildWithRegReqList, 0, 0)
			} else {
				*out = ChildWithRegReqList{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v4 ChildWithRegReq
			(v4).UnmarshalEasyJSON(in)
			*out = append(*out, v4)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels6(out *jwriter.Writer, in ChildWithRegReqList) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v5, v6 := range in {
			if v5 > 0 {
				out.RawByte(',')
			}
			(v6).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ChildWithRegReqList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChildWithRegReqList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChildWithRegReqList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChildWithRegReqList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels6(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels7(in *jlexer.Lexer, out *ChildWithRegReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "child":
			(out.Child).UnmarshalEasyJSON(in)
		case "reg_req":
			if in.IsNull() {
				in.Skip()
				out.RegReq = nil
			} else {
				if out.RegReq == nil {
					out.RegReq = new(RegReqResp)
				}
				(*out.RegReq).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels7(out *jwriter.Writer, in ChildWithRegReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"child\":"
		out.RawString(prefix[1:])
		(in.Child).MarshalEasyJSON(out)
	}
	if in.RegReq != nil {
		const prefix string = ",\"reg_req\":"
		out.RawString(prefix)
		(*in.RegReq).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChildWithRegReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChildWithRegReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChildWithRegReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChildWithRegReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels7(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels8(in *jlexer.Lexer, out *ChildRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "birth_date":
			out.BirthDate = uint64(in.Uint64())
		case "done_stage":
			out.DoneStage = Stage(in.Int8())
		case "pasport":
			out.Passport = string(in.String())
		case "place_of_residence":
			out.PlaceOfResidence = string(in.String())
		case "place_of_registration":
			out.PlaceOfRegistration = string(in.String())
		case "dir_path":
			out.DirPath = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels8(out *jwriter.Writer, in ChildRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"birth_date\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.BirthDate))
	}
	{
		const prefix string = ",\"done_stage\":"
		out.RawString(prefix)
		out.Int8(int8(in.DoneStage))
	}
	{
		const prefix string = ",\"pasport\":"
		out.RawString(prefix)
		out.String(string(in.Passport))
	}
	{
		const prefix string = ",\"place_of_residence\":"
		out.RawString(prefix)
		out.String(string(in.PlaceOfResidence))
	}
	{
		const prefix string = ",\"place_of_registration\":"
		out.RawString(prefix)
		out.String(string(in.PlaceOfRegistration))
	}
	{
		const prefix string = ",\"dir_path\":"
		out.RawString(prefix)
		out.String(string(in.DirPath))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChildRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChildRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChildRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChildRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels8(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels9(in *jlexer.Lexer, out *ChildFullRes) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "role":
			out.Role = string(in.String())
		case "first_name":
			out.FirstName = string(in.String())
		case "second_name":
			out.SecondName = string(in.String())
		case "last_name":
			out.LastName = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "email_verified":
			out.EmailVerified = bool(in.Bool())
		case "phone":
			out.Phone = string(in.String())
		case "birth_date":
			out.BirthDate = uint64(in.Uint64())
		case "done_stage":
			out.DoneStage = Stage(in.Int8())
		case "pasport":
			out.Passport = string(in.String())
		case "place_of_residence":
			out.PlaceOfResidence = string(in.String())
		case "place_of_registration":
			out.PlaceOfRegistration = string(in.String())
		case "dir_path":
			out.DirPath = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels9(out *jwriter.Writer, in ChildFullRes) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix)
		out.String(string(in.Role))
	}
	{
		const prefix string = ",\"first_name\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"second_name\":"
		out.RawString(prefix)
		out.String(string(in.SecondName))
	}
	{
		const prefix string = ",\"last_name\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"email_verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.EmailVerified))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.String(string(in.Phone))
	}
	{
		const prefix string = ",\"birth_date\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.BirthDate))
	}
	{
		const prefix string = ",\"done_stage\":"
		out.RawString(prefix)
		out.Int8(int8(in.DoneStage))
	}
	{
		const prefix string = ",\"pasport\":"
		out.RawString(prefix)
		out.String(string(in.Passport))
	}
	{
		const prefix string = ",\"place_of_residence\":"
		out.RawString(prefix)
		out.String(string(in.PlaceOfResidence))
	}
	{
		const prefix string = ",\"place_of_registration\":"
		out.RawString(prefix)
		out.String(string(in.PlaceOfRegistration))
	}
	{
		const prefix string = ",\"dir_path\":"
		out.RawString(prefix)
		out.String(string(in.DirPath))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ChildFullRes) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ChildFullRes) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ChildFullRes) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ChildFullRes) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels9(l, v)
}
func easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels10(in *jlexer.Lexer, out *Child) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = uint64(in.Uint64())
		case "user_id":
			out.UserID = uint64(in.Uint64())
		case "role":
			out.Role = Role(in.Int8())
		case "first_name":
			out.FirstName = string(in.String())
		case "second_name":
			out.SecondName = string(in.String())
		case "last_name":
			out.LastName = string(in.String())
		case "email":
			out.Email = string(in.String())
		case "email_verified":
			out.EmailVerified = bool(in.Bool())
		case "password":
			out.Password = string(in.String())
		case "phone":
			out.Phone = string(in.String())
		case "birth_date":
			out.BirthDate = uint64(in.Uint64())
		case "done_stage":
			out.DoneStage = Stage(in.Int8())
		case "passport":
			out.Passport = string(in.String())
		case "place_of_residence":
			out.PlaceOfResidence = string(in.String())
		case "place_of_registration":
			out.PlaceOfRegistration = string(in.String())
		case "dir_path":
			out.DirPath = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels10(out *jwriter.Writer, in Child) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.ID))
	}
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.UserID))
	}
	{
		const prefix string = ",\"role\":"
		out.RawString(prefix)
		out.Int8(int8(in.Role))
	}
	{
		const prefix string = ",\"first_name\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"second_name\":"
		out.RawString(prefix)
		out.String(string(in.SecondName))
	}
	{
		const prefix string = ",\"last_name\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"email_verified\":"
		out.RawString(prefix)
		out.Bool(bool(in.EmailVerified))
	}
	if in.Password != "" {
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"phone\":"
		out.RawString(prefix)
		out.String(string(in.Phone))
	}
	{
		const prefix string = ",\"birth_date\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.BirthDate))
	}
	{
		const prefix string = ",\"done_stage\":"
		out.RawString(prefix)
		out.Int8(int8(in.DoneStage))
	}
	if in.Passport != "" {
		const prefix string = ",\"passport\":"
		out.RawString(prefix)
		out.String(string(in.Passport))
	}
	{
		const prefix string = ",\"place_of_residence\":"
		out.RawString(prefix)
		out.String(string(in.PlaceOfResidence))
	}
	{
		const prefix string = ",\"place_of_registration\":"
		out.RawString(prefix)
		out.String(string(in.PlaceOfRegistration))
	}
	if in.DirPath != "" {
		const prefix string = ",\"dir_path\":"
		out.RawString(prefix)
		out.String(string(in.DirPath))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Child) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Child) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson9e1087fdEncodeGithubComVoyakinHLokleBackendInternalModels10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Child) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Child) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson9e1087fdDecodeGithubComVoyakinHLokleBackendInternalModels10(l, v)
}
